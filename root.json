{
  "/etc/shadow": {
    "perm": "root:root:600",
    "content": "root:secret:0:0:99999:7:::\nwolfgang:waff:0:0:99999:7:::\nguest:password:0:0:99999:7:::\n"
  },
  "/etc/group": {
    "perm": "root:root:600",
    "content": "root:x:0:\nsudo:x:1:wolfgang\nwolfgang:x:2:\nguest:x:3:\n"
  },
  "/etc/passwd": {
    "perm": "root:root:600",
    "content": "root:x:0:0:root:/root:/bin/shell\nwolfgang:x:1:2:,,,:/home/wolfgang:/bin/shell\nguest:x:2:3:,,,:/home/guest:/bin/shell\n"
  },
  "/home/guest/test.sh": {
    "perm": "guest:guest:744",
    "content": "#!/bin/shell\n\nfunc say msg;\n    echo $msg;\nendfunc;\n\necho $PATH;\n\necho ${pwd};\n\necho \"${ls -e ${pwd}}\";\n\necho \"123${pwd}xyz\";\n\nsleep 1;\n\nif \"~/loop.sh\" is file;\n    echo \"\\n==============================\";\n    echo \"==============================\";\n    cat \"~/loop.sh\";\n    echo \"==============================\";\n    echo \"==============================\\n\";\nendif;\n\nsay test;\n\nsleep 1;\n\nmkdir -s ttt;\n\ncd ttt;\n\ntouch -s a;\ntouch -s b;\n\nsay \"done!!!\";\n\nset ls \"${ls -c /bin}\";\n\nprintvar;\n"
  },
  "/home/guest/rm.sh": {
    "perm": "guest:guest:744",
    "content": "#!/bin/shell\n\nmkdir test-rm;\nmkdir test-rm/b;\nmkdir test-rm/c;\n\ntouch test-rm/a;\n\nmkdir test-rm/c/1;\nmkdir test-rm/c/2;\ntouch test-rm/c/x;\n\nrm -rf test-rm;\n"
  },
  "/home/guest/loop.sh": {
    "perm": "guest:guest:744",
    "content": "#!/bin/shell\n\nset loop 0;\n\n:start;\n\nsum loop 1;\n\necho round $loop;\n\nsleep 0.1;\n\nif $loop < 10;\n\ngoto start;\n\nelse;\n\necho \"Done!!!\";\n\nendif;\n"
  },
  "/home/guest/fizzbuzz.sh": {
    "perm": "guest:guest:744",
    "content": "#!/bin/shell\n\nfunc fizzbuzz num;\n\n    echo -e $num;\n\n    ifnot $num % 3;\n        echo -e \" fizz\";\n    endif;\n\n    ifnot $num % 5;\n        echo -e \" buzz\";\n    endif;\n\n    echo \"\";\n\nendfunc;\n\nset count 1;\n\nwhile $count <= 100;\n\n    fizzbuzz $count;\n\n    sum count 1;\n\nendwhile;\n"
  },
  "/home/guest/nested.sh": {
    "perm": "guest:guest:744",
    "content": "#!/bin/shell\n\nfunc test1 arga;\n\n    echo $arga;\n\n    test2 $arga;\n\n    echo $arga;\n\nendfunc;\n\n\nfunc test2 arga;\n\n    echo $arga;\n\n    set arga override;\n\n    echo $arga;\n\nendfunc;\n\n\ntest1 test;\n"
  },
  "/home/guest/array.sh": {
    "perm": "guest:guest:744",
    "content": "#!/bin/shell\n\n\nfunc listdir dir;\n\n    set list ${ls -c $dir};\n\n    set len ${count $list};\n\n    set i 0;\n\n    while $i < $len;\n\n        fromindex item $list $i;\n\n        if $dir == \"/\";\n            set item \"/$item\";\n        else;\n            set item \"$dir/$item\";\n        endif;\n\n        echo $item;\n\n        if $item is dir;\n            listdir \"$item\";\n        endif;\n\n        sum i 1;\n\n    endwhile;\n\nendfunc;\n\nlistdir $0;\n"
  },
  "/bin/args": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 560:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass args extends base_1.default {\n    start(_args) {\n        this.endOutput(JSON.stringify(this.rawArgs));\n    }\n}\nexports.default = args;\n\n\n/***/ }),\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(560);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/args.js.map",
    "perm": "root:root:0755"
  },
  "/bin/cat": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 861:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass cat extends base_1.default {\n    start(args) {\n        this.endOutput(args.map(a => {\n            try {\n                return this.system.fileSystem.read(a);\n            }\n            catch (e) {\n                return \"cat: \" + e;\n            }\n        }));\n    }\n}\nexports.default = cat;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(861);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/cat.js.map",
    "perm": "root:root:0755"
  },
  "/bin/cd": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 260:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass cd extends base_1.default {\n    start(args) {\n        const proc = this.proc.parent;\n        console.log(args);\n        let dir = (args[0] == \"-\" ? proc === null || proc === void 0 ? void 0 : proc.system.user.getEnv(\"LAST_DIR\") : args[0]) || \"/\";\n        if (dir.length < 1)\n            dir = \"/\";\n        proc === null || proc === void 0 ? void 0 : proc.system.user.setEnv(\"LAST_DIR\", proc === null || proc === void 0 ? void 0 : proc.fileSystem.cwd);\n        proc === null || proc === void 0 ? void 0 : proc.fileSystem.setCwd(args[0] || \"/\");\n        this.endOutput(\"\");\n    }\n}\nexports.default = cd;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(260);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/cd.js.map",
    "perm": "root:root:0755"
  },
  "/bin/chmod": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 453:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass chmod extends base_1.default {\n    start(_args) {\n        this.fail(\"Todo: chmod\");\n    }\n}\nexports.default = chmod;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(453);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/chmod.js.map",
    "perm": "root:root:0755"
  },
  "/bin/chown": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 402:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass chown extends base_1.default {\n    start(_args) {\n        this.fail(\"Todo: chown\");\n    }\n}\nexports.default = chown;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(402);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/chown.js.map",
    "perm": "root:root:0755"
  },
  "/bin/clear": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 638:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass clear extends base_1.default {\n    start(_args) {\n        this.endOutput(\"\\u001B[J\");\n    }\n}\nexports.default = clear;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(638);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/clear.js.map",
    "perm": "root:root:0755"
  },
  "/bin/echo": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 928:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass echo extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.newLine = true;\n    }\n    handleFlag(flag, _arg) {\n        switch (flag.toLowerCase()) {\n            case \"n\":\n            case \"e\":\n                this.newLine = false;\n                break;\n        }\n        return false;\n    }\n    start(args) {\n        this.endOutput(args.join(\" \") + (this.newLine ? \"\\n\" : \"\"));\n    }\n}\nexports.default = echo;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(928);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/echo.js.map",
    "perm": "root:root:0755"
  },
  "/bin/exit": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 595:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass pid extends base_1.default {\n    start(_args) {\n        var _a;\n        (_a = this.proc.parent) === null || _a === void 0 ? void 0 : _a.end(\"\");\n        this.endOutput(\"\");\n    }\n}\nexports.default = pid;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(595);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/exit.js.map",
    "perm": "root:root:0755"
  },
  "/bin/head": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 492:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass head extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.lines = 5;\n    }\n    start(args) {\n        const out = [];\n        args.forEach(a => {\n            out.push(a + \":\");\n            out.push(this.head(a));\n            out.push(\"\");\n        });\n        out.pop();\n        if (out.length == 2)\n            this.endOutput(out[1] + \"\\n\");\n        else\n            this.endOutput([...out, \"\"]);\n    }\n    head(path) {\n        try {\n            const parts = this.system.fileSystem.read(path).split(\"\\n\");\n            return parts.slice(0, this.lines).join(\"\\n\");\n        }\n        catch (e) {\n            return \"head: \" + e;\n        }\n    }\n}\nexports.default = head;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(492);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/head.js.map",
    "perm": "root:root:0755"
  },
  "/bin/hostname": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 887:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass hostname extends base_1.default {\n    start(_args) {\n        this.endOutput(location.hostname);\n    }\n}\nexports.default = hostname;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(887);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/hostname.js.map",
    "perm": "root:root:0755"
  },
  "/bin/ls": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 426:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass ls extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.showAll = false;\n        this.longForm = false;\n        this.humanReadable = false;\n        this.colour = true;\n    }\n    handleFlag(flag, _arg) {\n        switch (flag.toLowerCase()) {\n            case \"a\":\n                this.showAll = true;\n                break;\n            case \"l\":\n                this.longForm = true;\n                break;\n            case \"h\":\n                this.humanReadable = true;\n                break;\n            case \"c\":\n                this.colour = false;\n                break;\n        }\n        return false;\n    }\n    start(args) {\n        if (args.length < 1) {\n            args.push(\".\");\n        }\n        const result = args.map(a => [a, this.list(a)]);\n        if (result.length == 1) {\n            this.output(result[0][1]);\n            this.output(\"\\n\");\n            this.end(result[0][1]);\n        }\n        else {\n            const r2 = [];\n            result.forEach(r => {\n                r2.push([r[0]]);\n                r2.push(...r[1]);\n            });\n            this.output(r2);\n            this.output(\"\\n\");\n            this.end(r2);\n        }\n    }\n    list(path) {\n        let list = this.system.fileSystem.list(path);\n        list.sort();\n        const res = this.system.fileSystem.resolve(path);\n        const triml = res == \"/\" ? 0 : 1;\n        if (res != \"/\")\n            list.unshift(res + \"/..\");\n        list.unshift(res + \"/.\");\n        if (!this.showAll) {\n            list = list.filter(l => !l.substr(res.length + 1).startsWith(\".\"));\n        }\n        if (this.longForm) {\n            list = list.map(l => {\n                const dir = this.system.fileSystem.isDir(l);\n                const perm = this.system.fileSystem.getPerm(l);\n                const date = (new Date(perm.modifyTime * 1000));\n                const dateStr = date.toDateString().split(\" \");\n                dateStr.shift();\n                if (dateStr[2] == (new Date()).getFullYear().toString()) {\n                    dateStr.pop();\n                    dateStr.push(date.toTimeString().substr(0, 5));\n                }\n                return [\n                    this.humanReadable ? perm.longPermString : perm.permString,\n                    \"0\",\n                    perm.owner,\n                    perm.group,\n                    dir ? \"0\" : this.getFileSize(l),\n                    dateStr.join(\" \"),\n                    this.colouriseFile(l.substr(res.length + triml), dir, perm)\n                ];\n            });\n        }\n        else {\n            list = [list.map(l => {\n                    const dir = this.system.fileSystem.isDir(l);\n                    const perm = this.system.fileSystem.getPerm(l);\n                    return this.colouriseFile(l.substr(res.length + triml), dir, perm);\n                })];\n        }\n        return list;\n    }\n    getFileSize(path) {\n        let size = this.system.fileSystem.read(path).length;\n        if (this.humanReadable) {\n            let s = \"\";\n            if (size > (1024 * 1024)) {\n                size /= (1024 * 1024);\n                s = \"M\";\n            }\n            else if (size > 1024) {\n                size /= 1024;\n                s = \"K\";\n            }\n            return `${size.toFixed(1)}${s}B`;\n        }\n        else {\n            return size.toString();\n        }\n    }\n    colouriseFile(name, dir, access) {\n        if (!this.colour)\n            return name;\n        if (dir) {\n            name = \"\\u001B[34m\" + name;\n        }\n        else {\n            if (access.canExecute(this.system.user)) {\n                name = \"\\u001B[32m\" + name;\n            }\n        }\n        return name + \"\\u001B[0m\";\n    }\n}\nexports.default = ls;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(426);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/ls.js.map",
    "perm": "root:root:0755"
  },
  "/bin/mkdir": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 754:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass mkdir extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.silent = false;\n        this.makeParent = false;\n    }\n    handleFlag(flag) {\n        switch (flag.toLowerCase()) {\n            case \"s\":\n                this.silent = true;\n                break;\n            case \"p\":\n                this.makeParent = true;\n                break;\n        }\n        return false;\n    }\n    start(args) {\n        args.forEach(a => {\n            try {\n                this.system.fileSystem.mkdir(a);\n            }\n            catch (e) {\n                if (!this.silent || this.makeParent)\n                    this.output(e);\n            }\n        });\n        this.endOutput(\"\");\n    }\n}\nexports.default = mkdir;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(754);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/mkdir.js.map",
    "perm": "root:root:0755"
  },
  "/bin/pid": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 580:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass pid extends base_1.default {\n    start(_args) {\n        var _a;\n        this.endOutput(((_a = this.proc.parent) === null || _a === void 0 ? void 0 : _a.pid.toString()) || \"n/a\");\n    }\n}\nexports.default = pid;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(580);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/pid.js.map",
    "perm": "root:root:0755"
  },
  "/bin/printenv": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 24:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass printenv extends base_1.default {\n    start(_args) {\n        this.endOutput([...this.system.user.listEnv(), []]);\n    }\n}\nexports.default = printenv;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(24);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/printenv.js.map",
    "perm": "root:root:0755"
  },
  "/bin/pwd": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 252:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass pwd extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.abreviate = false;\n    }\n    handleFlag(flag, _arg) {\n        switch (flag.toLowerCase()) {\n            case \"a\":\n                this.abreviate = true;\n                break;\n        }\n        return false;\n    }\n    start(_args) {\n        let cwd = this.system.fileSystem.cwd;\n        if (this.abreviate) {\n            cwd = this.system.fileSystem.abreviate(cwd);\n        }\n        this.endOutput(cwd);\n    }\n}\nexports.default = pwd;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(252);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/pwd.js.map",
    "perm": "root:root:0755"
  },
  "/bin/remenv": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 271:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass printenv extends base_1.default {\n    start(args) {\n        args.forEach(a => { var _a; return (_a = this.proc.parent) === null || _a === void 0 ? void 0 : _a.system.user.remEnv(a); });\n        this.endOutput(\"\");\n    }\n}\nexports.default = printenv;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(271);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/remenv.js.map",
    "perm": "root:root:0755"
  },
  "/bin/rm": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 429:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass rm extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.recursive = false;\n        this.force = false;\n    }\n    handleFlag(flag, _arg) {\n        switch (flag.toLowerCase()) {\n            case \"f\":\n                this.force = true;\n                break;\n            case \"r\":\n                this.recursive = true;\n                break;\n        }\n        return false;\n    }\n    start(args) {\n        args.forEach(a => this.rm(a));\n        this.endOutput(this.force ? \"\" : \"\");\n    }\n    rm(path) {\n        const fs = this.system.fileSystem;\n        const fpath = fs.resolve(path);\n        if (fs.exists(fpath)) {\n            const dir = fs.isDir(fpath);\n            if (dir) {\n                if (!this.recursive)\n                    this.output(`rm: cannot remove '${fpath}': Is a Direcotry\\n`);\n                else {\n                    const children = this.getChildren(fpath);\n                    children.forEach(p => this.rm(p));\n                    try {\n                        fs.delete(fpath);\n                    }\n                    catch (e) {\n                        this.output(`rm: failed to remove '${fpath}': ${e}\\n`);\n                    }\n                }\n            }\n            else {\n                try {\n                    fs.delete(fpath);\n                }\n                catch (e) {\n                    this.output(`rm: failed to remove '${fpath}': ${e}\\n`);\n                }\n            }\n        }\n    }\n    getChildren(path) {\n        const fs = this.system.fileSystem;\n        const paths = [];\n        fs.list(path, false).forEach(p => {\n            paths.push(p);\n        });\n        return paths;\n    }\n}\nexports.default = rm;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(429);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/rm.js.map",
    "perm": "root:root:0755"
  },
  "/bin/setenv": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 579:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass setenv extends base_1.default {\n    start(args) {\n        var _a;\n        if (args.length != 2) {\n            this.fail(\"Expected 2 arguments, [name] [value]\");\n        }\n        (_a = this.proc.parent) === null || _a === void 0 ? void 0 : _a.system.user.setEnv(args[0], args[1]);\n        this.endOutput(\"\");\n    }\n}\nexports.default = setenv;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(579);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/setenv.js.map",
    "perm": "root:root:0755"
  },
  "/bin/shell": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 849:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst LexerStream_1 = __importDefault(__webpack_require__(93));\nconst base_1 = __importDefault(__webpack_require__(334));\nconst ShellRunner_1 = __importDefault(__webpack_require__(16));\nclass shell extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.motd = false;\n        this.inputStr = \"\";\n        this.savedInputStr = \"\";\n        this.historyIndex = -1;\n        this.column = 0;\n        this.script = null;\n        this.command = false;\n        this.test = false;\n        this.vars = {};\n        this.shellRunning = null;\n    }\n    handleFlag(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"motd\":\n                this.motd = true;\n                break;\n            case \"s\":\n            case \"script\":\n                this.script = arg;\n                return true;\n            case \"c\":\n            case \"command\":\n                this.command = true;\n                break;\n            case \"t\":\n            case \"test\":\n                this.test = true;\n                break;\n        }\n        return false;\n    }\n    passInput(input, ident) {\n        if (ident == \"user\") {\n            this.userInput(input, ident);\n        }\n        else {\n            this.output(input);\n        }\n    }\n    end(output) {\n        if (this.shellRunning != null) {\n            this.shellRunning.end();\n            this.shellRunning = null;\n            if (!this.script && !this.command) {\n                return;\n            }\n        }\n        super.end(output);\n    }\n    get process() {\n        return this.proc;\n    }\n    userInput(input, ident) {\n        if (typeof input != \"string\") {\n            throw \"USER INPUT ARRAY???\";\n        }\n        if (this.shellRunning != null) {\n            this.shellRunning.input(input, ident);\n        }\n        else {\n            switch (input) {\n                case \"Enter\":\n                    this.output(\"\\u001B[0m\");\n                    this.output(\"\\n\");\n                    if (this.inputStr.length) {\n                        this.historyIndex = -1;\n                        if (!this.inputStr.startsWith(\" \")) {\n                            this.system.fileSystem.append(\"~/.shell_history\", this.inputStr + \"\\n\");\n                        }\n                        this.runInput(this.inputStr)\n                            .then(() => {\n                            this.inputStr = \"\";\n                            this.column = 0;\n                            this.prompt();\n                        });\n                    }\n                    else {\n                        this.prompt();\n                    }\n                    break;\n                case \"Tab\":\n                    console.log(\"TODO : auto-complete\");\n                    break;\n                case \"Backspace\":\n                    if (this.inputStr.length > 0) {\n                        this.inputStr = this.inputStr.substring(0, this.inputStr.length - 1);\n                        this.output(\"\\b\");\n                    }\n                    else {\n                        this.output(\"\\u0007\");\n                    }\n                    break;\n                case \"ArrowUp\":\n                case \"ArrowDown\":\n                    this.history(input == \"ArrowUp\" ? 1 : -1);\n                    break;\n                case \"ArrowLeft\":\n                case \"ArrowRight\":\n                    this.nav(input == \"ArrowLeft\" ? -1 : 1);\n                    break;\n                case \"Home\":\n                    break;\n                case \"End\":\n                    break;\n                default:\n                    this.addToInput(input);\n                    break;\n            }\n        }\n    }\n    async runInput(input) {\n        const runner = new ShellRunner_1.default(this, input, \"shell_exec\");\n        runner.test = this.test;\n        this.shellRunning = runner;\n        await runner.run();\n        this.clearScopedVars();\n        this.shellRunning = null;\n    }\n    addToInput(ch) {\n        this.inputStr = this.inputStr.substring(0, this.column) + ch + this.inputStr.substring(this.column);\n        if (this.column < this.inputStr.length - ch.length) {\n            this.output(\"\\u001B[K\");\n            this.output(this.inputStr.substr(this.column));\n            this.output((new Array(this.inputStr.length - this.column)).join(\"\\u001B[D\"));\n        }\n        else {\n            this.output(ch);\n        }\n        this.column += ch.length;\n    }\n    history(dir) {\n        if (this.historyIndex < 0) {\n            this.savedInputStr = this.inputStr;\n        }\n        this.historyIndex += dir;\n        let item = \"\";\n        if (this.historyIndex == -1) {\n            item = this.savedInputStr;\n        }\n        if (this.historyIndex >= 0) {\n            const history = this.system.fileSystem.read(\"~/.shell_history\").trim().split(\"\\n\").filter((h, i, a) => {\n                return i < 1 || a[i - 1] != h;\n            });\n            item = history[history.length - this.historyIndex - 1];\n        }\n        if (this.historyIndex < -1)\n            this.historyIndex = -1;\n        if (item.length > 0 || this.historyIndex == -1) {\n            this.inputStr = \"\";\n            this.output((new Array(this.column + 1)).join(\"\\u001B[D\"));\n            this.output(\"\\u001B[K\");\n            this.column = 0;\n            if (item.length > 0)\n                this.addToInput(item);\n        }\n    }\n    nav(dir) {\n        let dirC = \"C\";\n        if (dir < 0) {\n            if (this.column == 0)\n                return;\n            this.column--;\n            dirC = \"D\";\n            dir *= -1;\n        }\n        else {\n            if (this.column == this.inputStr.length)\n                return;\n            this.column++;\n        }\n        this.output(`\\u001B[${dir}${dirC}`);\n    }\n    async start(args) {\n        args.forEach((v, i) => this.setVar((i).toString(), v, \"\"));\n        this.setVar(\"ARGC\", args.length.toString(), \"\");\n        await this.setup();\n        if (this.script != null) {\n            const input = this.system.fileSystem.read(this.script);\n            await this.runInput(input);\n            this.endOutput(\"\");\n        }\n        else if (this.command) {\n        }\n        else if (this.motd) {\n            try {\n                if (this.system.fileSystem.exists(\"/etc/shell/motd\")) {\n                    await this.runInput(this.system.fileSystem.read(\"/etc/shell/motd\"));\n                }\n            }\n            catch (e) {\n            }\n            this.prompt();\n        }\n        else {\n            this.prompt();\n        }\n    }\n    async setup() {\n        try {\n            if (this.system.fileSystem.exists(\"/etc/shell/profile\")) {\n                const test = this.test;\n                this.test = false;\n                await this.runInput(this.system.fileSystem.read(\"/etc/shell/profile\"));\n                this.test = test;\n            }\n        }\n        catch (e) {\n            console.log(\"Shell Setup Error\", e);\n        }\n        return Promise.resolve();\n    }\n    async prompt() {\n        const p = await this.varReplace(this.getVar(\"PS1\", \"\") || \"$USER@$HOSTNAME:$CWD\\\\$\\\\$ \");\n        this.output(p);\n    }\n    listVars() {\n        const vars = this.system.user.listEnv();\n        const ex = vars.map(v => v[0]);\n        Object.entries(this.vars).filter(v => !ex.includes(v[0]))\n            .forEach(e => vars.push(e));\n        return vars;\n    }\n    clearScopedVars() {\n        for (const k in this.vars) {\n            if (k.startsWith(\"SCOPE_\")) {\n                delete this.vars[k];\n            }\n        }\n    }\n    getVar(name, prefix) {\n        name = name.toUpperCase().trim();\n        prefix = (prefix + name).toUpperCase().trim();\n        const v = this.vars[prefix] || (this.vars[name] || this.system.user.getEnv(name));\n        return v;\n    }\n    setVar(name, value, prefix) {\n        name = (prefix + name).toUpperCase().trim();\n        this.vars[name] = value;\n        return value;\n    }\n    remVar(name, prefix) {\n        name = (prefix + name).toUpperCase().trim();\n        if (this.vars.hasOwnProperty(name)) {\n            delete this.vars[name];\n        }\n    }\n    async varReplace(t, scopePrefix = \"\") {\n        const stream = new LexerStream_1.default(t);\n        let o = \"\";\n        let inVar = false;\n        let escape = false;\n        let varName = \"\";\n        let varIsCmd = false;\n        let varIsCmdBC = 0;\n        while (!stream.eof()) {\n            const ch = stream.next();\n            if (escape) {\n                escape = false;\n                o += ch;\n            }\n            else if (inVar) {\n                if (varIsCmd) {\n                    if (ch == \"}\" && varIsCmdBC == 0) {\n                        varIsCmd = false;\n                        inVar = false;\n                        if (varName.length) {\n                            const runner = new ShellRunner_1.default(this, varName, \"shell_exec\", scopePrefix);\n                            runner.out = false;\n                            let out = await runner.run();\n                            if (out instanceof Array && out.length) {\n                                if (out[0] instanceof Array) {\n                                    out = out.map(o => o.join(\"\\t\")).join(\"\\n\");\n                                }\n                                else {\n                                    out = out.join(\"\\t\");\n                                }\n                            }\n                            o += out;\n                        }\n                    }\n                    else {\n                        if (ch == \"{\")\n                            varIsCmdBC++;\n                        if (ch == \"}\")\n                            varIsCmdBC--;\n                        varName += ch;\n                    }\n                }\n                else if (/[a-zA-Z0-9_-]/.test(ch)) {\n                    varName += ch;\n                }\n                else if (varName.length < 1 && ch == \"{\") {\n                    varIsCmd = true;\n                    varIsCmdBC = 0;\n                }\n                else {\n                    if (varName.length) {\n                        o += this.getVar(varName, scopePrefix);\n                    }\n                    o += ch;\n                    inVar = false;\n                }\n            }\n            else if (ch == \"\\\\\") {\n                escape = true;\n            }\n            else if (ch == \"$\") {\n                inVar = true;\n                varName = \"\";\n            }\n            else {\n                o += ch;\n            }\n        }\n        if (inVar) {\n            o += this.getVar(varName, scopePrefix);\n        }\n        return Promise.resolve(o);\n    }\n}\nexports.default = shell;\n\n\n/***/ }),\n\n/***/ 683:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ShellLexer_1 = __importDefault(__webpack_require__(886));\nclass ShellBlocker {\n    constructor(script) {\n        this.blocks = [];\n        this.lexer = ShellLexer_1.default.createFromString(script);\n    }\n    getBlocks() {\n        if (this.blocks.length < 1) {\n            this.buildBlocks();\n        }\n        return [...this.blocks];\n    }\n    buildBlocks() {\n        this.blocks = [];\n        let currentBlock = [];\n        while (!this.lexer.eof()) {\n            const next = this.lexer.next();\n            if (next == null)\n                continue;\n            if (next.value == \";\") {\n                this.blocks.push(currentBlock);\n                currentBlock = [];\n            }\n            else {\n                currentBlock.push(next);\n            }\n        }\n        this.blocks.push(currentBlock);\n    }\n}\nexports.default = ShellBlocker;\n\n\n/***/ }),\n\n/***/ 886:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.TokenType = void 0;\nconst LexerStream_1 = __importDefault(__webpack_require__(93));\nclass ShellLexer {\n    constructor(stream) {\n        this.pos = -1;\n        this.stream = stream;\n    }\n    static createFromString(input) {\n        return new ShellLexer(new LexerStream_1.default(input));\n    }\n    isWhitespace(ch, nl = true) {\n        return ((nl ? \"\\n\" : \"\") + \" \\r\\t\").indexOf(ch) >= 0;\n    }\n    isAToZ0To9(ch) {\n        return /[a-zA-Z0-9]/.test(ch);\n    }\n    isNotAToZ0To9(ch) {\n        return !this.isAToZ0To9(ch) && !this.isWhitespace(ch);\n    }\n    isSpecial(ch) {\n        return [\";\", \"&\", \">\", \"|\", \"<\", \"[\", \"]\", \"=\", \"!\"].includes(ch);\n    }\n    readWhile(func) {\n        let str = \"\";\n        while (!this.stream.eof() && func(this.stream.peek())) {\n            str += this.stream.next();\n        }\n        return str;\n    }\n    all() {\n        this.rewind();\n        let next = this.next();\n        const all = [];\n        while (next != null) {\n            all.push(next);\n            next = this.next();\n        }\n        return all;\n    }\n    next() {\n        this.readWhile(ch => this.isWhitespace(ch));\n        if (this.stream.eof())\n            return null;\n        const ch = this.stream.peek();\n        const chAfter = this.stream.peek(1);\n        const line = this.stream.line + 1;\n        const column = this.stream.column;\n        if (ch == \"#\")\n            return this.skipOneLineComment();\n        if (ch == \"/\") {\n            if (chAfter == \"/\")\n                return this.skipOneLineComment();\n            else if (chAfter == \"*\")\n                return this.skipMultiLineComment();\n        }\n        this.pos++;\n        if (ch == \"'\" || ch == '\"')\n            return this.readWrapped(ch, TokenType.string, line, column);\n        if (ch == \"$\")\n            return this.readVarToken(TokenType.ident, line, column);\n        else if (this.isSpecial(ch))\n            return this.readSpecial(TokenType.spec, line, column);\n        else\n            return this.readIdentifier(TokenType.ident, line, column);\n    }\n    skipOneLineComment() {\n        this.readWhile((ch) => ch != \"\\n\");\n        this.stream.next();\n        return this.next();\n    }\n    skipMultiLineComment() {\n        this.readWhile((ch) => {\n            return !(ch == \"/\" && this.stream.peek(-1) == \"*\");\n        });\n        this.stream.next();\n        return this.next();\n    }\n    readVarToken(type, line, column) {\n        const func = this.stream.peek(1) == \"{\";\n        let depth = 0;\n        const raw = this.readEscaped((ch, n) => {\n            if (func) {\n                if (ch == \"{\")\n                    depth++;\n                if (ch == \"}\")\n                    depth--;\n                return ch == \"}\" && depth < 1;\n            }\n            else {\n                return this.isWhitespace(n) || this.isSpecial(n);\n            }\n        });\n        return {\n            type,\n            value: raw,\n            raw,\n            line,\n            column\n        };\n    }\n    readWrapped(wrapper, type, line, column) {\n        const raw = this.readEscaped(wrapper, true);\n        return {\n            type: type,\n            value: raw.substring(1, raw.length - 1),\n            raw: raw,\n            line,\n            column,\n        };\n    }\n    readIdentifier(type, line, column) {\n        const raw = this.readEscaped((_ch, n) => this.isWhitespace(n) || this.isSpecial(n));\n        return {\n            type: type,\n            value: raw,\n            raw: raw,\n            line,\n            column,\n        };\n    }\n    readSpecial(type, line, column) {\n        const raw = this.readWhile(ch => this.isNotAToZ0To9(ch));\n        return {\n            type: type,\n            value: raw,\n            raw: raw,\n            line,\n            column,\n        };\n    }\n    readEscaped(end, skipFirst = false, escape = \"\\\\\") {\n        let escaped = skipFirst;\n        let str = \"\";\n        while (!this.stream.eof()) {\n            const ch = this.stream.next();\n            if (escaped) {\n                str += this.resolveEscapedChar(ch);\n                escaped = false;\n            }\n            else if (ch == escape && escape != \"\") {\n                escaped = true;\n            }\n            else {\n                str += ch;\n                if (typeof end == \"string\") {\n                    if (ch == end) {\n                        break;\n                    }\n                }\n                else {\n                    if (end(ch, this.stream.peek())) {\n                        break;\n                    }\n                }\n            }\n        }\n        return str;\n    }\n    resolveEscapedChar(char) {\n        switch (char) {\n            case \"n\":\n                return \"\\n\";\n            case \"$\":\n                return \"\\\\$\";\n            case \"0\":\n                let num = \"\";\n                let p = this.stream.peek();\n                if (/[0-7]/.test(p)) {\n                    num += this.stream.next();\n                }\n                p = this.stream.peek();\n                if (/[0-7]/.test(p)) {\n                    num += this.stream.next();\n                }\n                const o = parseInt(num, 8);\n                return decodeURIComponent(\"%\" + o.toString(16));\n            default:\n                return char;\n        }\n    }\n    peek(count = 0) {\n        const pos = this.pos;\n        let token = this.next();\n        while (count--) {\n            token = this.next();\n        }\n        this.rewindTo(pos);\n        return token;\n    }\n    eof() {\n        return this.peek() == null;\n    }\n    rewind() {\n        this.stream.rewind();\n        this.pos = -1;\n    }\n    rewindTo(pos) {\n        this.rewind();\n        while (this.pos < pos) {\n            this.next();\n        }\n    }\n}\nexports.default = ShellLexer;\nvar TokenType;\n(function (TokenType) {\n    TokenType[\"string\"] = \"string\";\n    TokenType[\"ident\"] = \"ident\";\n    TokenType[\"spec\"] = \"spec\";\n})(TokenType = exports.TokenType || (exports.TokenType = {}));\n\n\n/***/ }),\n\n/***/ 16:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst ShellBlocker_1 = __importDefault(__webpack_require__(683));\nclass ShellRunner {\n    constructor(shell, script, ident, scopePrefix = \"\") {\n        this.currentProc = null;\n        this.currentProcIdent = \"\";\n        this.running = false;\n        this.test = false;\n        this.out = true;\n        this.block = 0;\n        this.blocks = [];\n        this.funcs = {};\n        this.funcStack = [];\n        this.shell = shell;\n        this.blocker = new ShellBlocker_1.default(script);\n        this.ident = ident;\n        this.scopePrefix = scopePrefix;\n    }\n    end() {\n        var _a;\n        (_a = this.currentProc) === null || _a === void 0 ? void 0 : _a.input(\"\\u0018\", \"user\");\n        this.currentProc = null;\n        this.running = false;\n    }\n    hookOut(_hook, _ident) {\n        throw new Error(\"Method not implemented.\");\n    }\n    input(input, ident) {\n        var _a;\n        switch (ident) {\n            case \"user\":\n                (_a = this.currentProc) === null || _a === void 0 ? void 0 : _a.input(input, ident);\n                break;\n            case this.currentProcIdent:\n                this.output(input, ident);\n                break;\n            default:\n                console.log(\"Shell runner lost input\", input, ident);\n                break;\n        }\n    }\n    output(output, _ident) {\n        if (!this.out)\n            return;\n        this.shell.input(output, this.ident);\n    }\n    async run() {\n        if (this.running)\n            Promise.reject(\"running\");\n        this.running = true;\n        this.blocks = this.blocker.getBlocks().filter(b => b.length);\n        this.block = 0;\n        let args = [];\n        try {\n            while (this.block < this.blocks.length) {\n                args = await this.runBlock([...this.blocks[this.block]], this.block);\n                this.block++;\n            }\n        }\n        catch (e) {\n            this.output(e.toString(), \"error\");\n        }\n        return Promise.resolve(args);\n    }\n    async runBlock(tokes, block) {\n        if (tokes.length < 1)\n            return Promise.resolve(\"\");\n        if (!this.running)\n            return Promise.reject(\"canceled\");\n        const vtokes = [];\n        for (const t of tokes) {\n            const r = await this.shell.varReplace(t.value, this.varScopePrefix);\n            vtokes.push(r);\n        }\n        if (this.test) {\n            this.output(JSON.stringify(tokes.map(t => t.value)) + \"\\n\", \"test\");\n            this.output(JSON.stringify(vtokes) + \"\\n\", \"test\");\n            return Promise.resolve(\"\");\n        }\n        const name = vtokes.shift() || \"\";\n        const internal = await this.handleInternal(name, vtokes, block);\n        if (internal !== false) {\n            return Promise.resolve(internal);\n        }\n        const proc = this.shell.process.createProcess(name, vtokes);\n        this.currentProc = proc;\n        this.currentProcIdent = `${name}[${proc.pid}]`;\n        proc.hookOut(this, this.currentProcIdent);\n        return proc.run();\n    }\n    async handleInternal(name, args, block) {\n        name = name.trim().toLowerCase();\n        if (name.startsWith(\":\"))\n            return Promise.resolve(\"\");\n        if (name == \"goto\")\n            return this.goto(args[0] || \"\", block);\n        if (name == \"endif\")\n            return Promise.resolve(\"\");\n        if (name == \"if\")\n            return this.conditional(args, block);\n        if (name == \"ifnot\")\n            return this.conditional(args, block, \"ifnot\", \"endif\", \"else\", true);\n        if (name == \"else\")\n            return this.skipElse(block);\n        if (name == \"set\")\n            return this.set(args, block);\n        if (name == \"len\")\n            return this.len(args, block);\n        if (name == \"count\")\n            return this.count(args, block);\n        if (name == \"sum\")\n            return this.math(args, (a, b) => a + b, name, block);\n        if (name == \"mult\")\n            return this.math(args, (a, b) => a * b, name, block);\n        if (name == \"div\")\n            return this.math(args, (a, b) => a / b, name, block);\n        if (name == \"sub\")\n            return this.math(args, (a, b) => a - b, name, block);\n        if (name == \"mod\")\n            return this.math(args, (a, b) => a % b, name, block);\n        if (name == \"pow\")\n            return this.math(args, (a, b) => a ^ b, name, block);\n        if (name == \"printvar\")\n            return this.printVar();\n        if (name == \"func\")\n            return this.registerFunc(args, block);\n        if (this.isFunc(name))\n            return this.runFunc(name, args, block);\n        if (name == \"return\")\n            return this.endFunc(args[0] || \"\", block);\n        if (name == \"endfunc\")\n            return this.endFunc(\"\", block);\n        if (name == \"while\")\n            return this.conditional(args, block, \"while\", \"endwhile\", null);\n        if (name == \"endwhile\")\n            return this.endWhile(block);\n        if (name == \"fromindex\")\n            return this.fromIndex(args, block);\n        return Promise.resolve(false);\n    }\n    async skipElse(block) {\n        let depth = 1;\n        const index = this.blocks.findIndex((b, i) => {\n            var _a;\n            if (i <= block)\n                return false;\n            const n = (((_a = b[0]) === null || _a === void 0 ? void 0 : _a.value) || \"\").trim().toLowerCase();\n            if (n == \"if\" || n == \"ifnot\")\n                depth++;\n            if (n == \"endif\") {\n                depth--;\n                if (depth < 1)\n                    return true;\n            }\n            return false;\n        });\n        if (index < 0)\n            throw `else needs endif: Line ${this.getBlockStartLine(block)}`;\n        this.block = index;\n        return \"\";\n    }\n    fromIndex(args, block) {\n        if (args.length != 3) {\n            throw `fromindex needs 3 arguments: Line ${this.getBlockStartLine(block)}`;\n        }\n        return this.set([args[0], this.arrayIffy(args[1])[parseInt(args[2]) || 0]], block);\n    }\n    async endWhile(block) {\n        var _a;\n        let i = block;\n        let depth = 1;\n        let index = null;\n        while (--i >= 0) {\n            const b = this.blocks[i];\n            const n = (((_a = b[0]) === null || _a === void 0 ? void 0 : _a.value) || \"\").trim().toLowerCase();\n            if (n == \"endwhile\")\n                depth++;\n            if (n == \"while\")\n                depth--;\n            if (n == \"while\" && depth < 1) {\n                index = i - 1;\n                break;\n            }\n        }\n        if (index == null) {\n            throw `endwhile needs while above: Line ${this.getBlockStartLine(block)}`;\n        }\n        else {\n            this.block = index;\n        }\n        return \"\";\n    }\n    get varScopePrefix() {\n        if (this.funcStack.length > 0) {\n            const s = this.funcStack[this.funcStack.length - 1];\n            return `scope_${s.func}_${this.funcStack.length}_`;\n        }\n        return this.scopePrefix;\n    }\n    endFunc(arg, block) {\n        const stack = this.funcStack.pop();\n        if (stack) {\n            this.block = stack.block;\n        }\n        else {\n            throw `stack error, failed to pop: Line ${this.blocks[block][0].line}\\n`;\n        }\n        return arg;\n    }\n    runFunc(name, args, block) {\n        const func = this.funcs[name];\n        const toSet = [];\n        func.args.forEach((a, i) => {\n            toSet.push([a, args[i] || \"\"]);\n        });\n        this.block = func.block;\n        this.funcStack.push({ block: block, func: name });\n        toSet.forEach(t => this.set(t, block));\n        return \"\";\n    }\n    isFunc(name) {\n        return Object.keys(this.funcs).includes(name);\n    }\n    async registerFunc(args, block) {\n        if (args.length < 1) {\n            throw `func must have a name: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        const name = args.shift() || \"\";\n        const index = this.blocks.findIndex((b, i) => {\n            var _a;\n            if (i <= block)\n                return false;\n            const n = (((_a = b[0]) === null || _a === void 0 ? void 0 : _a.value) || \"\").trim().toLowerCase();\n            if (n == \"func\")\n                throw `cannot nest funcs: : Line ${this.getBlockStartLine(block)}\\n`;\n            return n == \"endfunc\";\n        });\n        if (index < 1) {\n            throw \"func needs endfunc\";\n        }\n        this.funcs[name] = { block: block, endBlock: index, args: args };\n        this.block = index;\n        return \"\";\n    }\n    async printVar() {\n        this.output([...this.shell.listVars(), []], \"printvar\");\n        return \"\";\n    }\n    async goto(label, block) {\n        const index = this.blocks.findIndex(block => {\n            var _a;\n            return (((_a = block[0]) === null || _a === void 0 ? void 0 : _a.value) || \"\") == `:${label}`;\n        });\n        if (index < 1) {\n            throw `goto needs label :${label}: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        this.block = index;\n        return \"\";\n    }\n    async len(args, block) {\n        if (![1, 2].includes(args.length)) {\n            throw `len can only take 1 or 2 variables: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        if (args.length == 2) {\n            return this.set([args[0], args[1].length.toString()], block);\n        }\n        else {\n            return args[0].length.toString();\n        }\n    }\n    async count(args, block) {\n        if (![1, 2].includes(args.length)) {\n            throw `count can only take 1 or 2 variables: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        if (args.length == 2) {\n            return this.set([args[0], this.arrayIffy(args[1]).length.toString()], block);\n        }\n        else {\n            return this.arrayIffy(args[0]).length.toString();\n        }\n    }\n    async math(args, func, name, block) {\n        if (args.length != 2) {\n            throw `${name} can only take 2 variables: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        let a = args[0] || \"0\";\n        let isVar = null;\n        let b = args[1] || \"0\";\n        if (isNaN(parseFloat(a))) {\n            isVar = a;\n            a = this.shell.getVar(a, this.varScopePrefix) || \"\";\n        }\n        a = parseInt(a) || 0;\n        b = parseInt(b) || 0;\n        if (isVar !== null) {\n            return this.set([args[0], func(a, b).toString()], block);\n        }\n        else {\n            return func(a, b).toString();\n        }\n    }\n    async set(args, block) {\n        if (args.length != 2) {\n            throw `set can only take 2 variables: : Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        return this.shell.setVar(args[0], args[1], this.varScopePrefix);\n    }\n    async conditional(args, block, start = \"if\", end = \"endif\", endAlt = \"else\", invert = false) {\n        if (args.length != 3 && args.length != 1) {\n            throw `if can only take 1 or 3 variables: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n        const a = (args[0]).toString();\n        const b = (args[2] || \"0\").toString();\n        const intA = parseInt(a) || 0;\n        const intB = parseInt(b) || 0;\n        let pass = false;\n        if (args.length == 1) {\n            pass = intA != 0 || a.length > 0;\n        }\n        else {\n            const op = (args[1] || \"\").toString();\n            switch (args[1] || \"\") {\n                case \"==\":\n                case \"=\":\n                    pass = a == b;\n                    break;\n                case \"!=\":\n                    pass = a == b;\n                    break;\n                case \">\":\n                    pass = intA > intB;\n                    break;\n                case \">=\":\n                    pass = intA >= intB;\n                    break;\n                case \"<\":\n                    pass = intA < intB;\n                    break;\n                case \"<=\":\n                    pass = intA <= intB;\n                    break;\n                case \"%\":\n                    pass = (intA % intB) != 0;\n                    break;\n                case \"is\":\n                    pass = this.conditionalIs(a, b, block);\n                    break;\n                default:\n                    throw `Unrecognized operator: ${op}: Line ${this.getBlockStartLine(block)}\\n`;\n            }\n        }\n        if (invert) {\n            pass = !pass;\n        }\n        if (!pass) {\n            let depth = 1;\n            const index = this.blocks.findIndex((b, i) => {\n                var _a;\n                if (i <= block)\n                    return false;\n                const n = (((_a = b[0]) === null || _a === void 0 ? void 0 : _a.value) || \"\").trim().toLowerCase();\n                if (n == start)\n                    depth++;\n                if (n == end || (depth == 1 && n === endAlt))\n                    depth--;\n                return depth < 1 && (n == end || n === endAlt);\n            });\n            if (index < 1) {\n                throw `${start} needs ${end}: Line ${this.getBlockStartLine(block)}\\n`;\n            }\n            this.block = index;\n        }\n        return \"\";\n    }\n    conditionalIs(a, b, block) {\n        switch (b.toLowerCase()) {\n            case \"file\":\n                return this.shell.process.fileSystem.isFile(a.trim());\n            case \"dir\":\n                return this.shell.process.fileSystem.isDir(a.trim());\n            case \"int\":\n                return this.shell.process.fileSystem.isDir(a);\n            case \"float\":\n                return this.shell.process.fileSystem.isDir(a);\n            default:\n                throw `Invlaid is param ${b}: Line ${this.getBlockStartLine(block)}\\n`;\n        }\n    }\n    getBlockStartLine(block) {\n        var _a;\n        return ((_a = this.blocks[block][0]) === null || _a === void 0 ? void 0 : _a.line) || -1;\n    }\n    arrayIffy(arg) {\n        if (arg.includes(\"\\n\"))\n            return arg.split(\"\\n\");\n        if (arg.includes(\"\\t\"))\n            return arg.split(\"\\t\");\n        throw \"array convert fail\";\n    }\n}\nexports.default = ShellRunner;\n\n\n/***/ }),\n\n/***/ 93:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass LexerStream {\n    constructor(input) {\n        this.lin = 0;\n        this.pos = 0;\n        this.col = 0;\n        this.input = input;\n    }\n    get position() {\n        return this.pos;\n    }\n    get line() {\n        return this.lin;\n    }\n    get column() {\n        return this.col;\n    }\n    next() {\n        const char = this.peek();\n        this.pos++;\n        if (char == \"\\n\") {\n            this.lin++;\n            this.col = 0;\n        }\n        else {\n            this.col++;\n        }\n        return char;\n    }\n    peek(count = 0) {\n        return this.input.charAt(this.pos + count);\n    }\n    eof() {\n        return this.peek() == \"\";\n    }\n    croak(error) {\n        return new Error(`[${this.line}:${this.col}] - ${error}`);\n    }\n    rewindTo(position) {\n        this.rewind();\n        while (this.pos < position) {\n            this.next();\n        }\n    }\n    rewind() {\n        this.pos = 0;\n        this.lin = 0;\n        this.col = 0;\n    }\n}\nexports.default = LexerStream;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(849);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/shell.js.map",
    "perm": "root:root:0755"
  },
  "/bin/sleep": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 844:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass sleep extends base_1.default {\n    start(args) {\n        setTimeout(() => {\n            this.endOutput(\"\");\n        }, (parseFloat(args[0]) || 1) * 1000);\n    }\n}\nexports.default = sleep;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(844);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/sleep.js.map",
    "perm": "root:root:0755"
  },
  "/bin/tail": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 10:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass tail extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.lines = 5;\n    }\n    start(args) {\n        const out = [];\n        args.forEach(a => {\n            out.push(a + \":\");\n            out.push(this.tail(a));\n            out.push(\"\");\n        });\n        out.pop();\n        if (out.length == 2)\n            out.shift();\n        this.endOutput(out);\n    }\n    tail(path) {\n        try {\n            const parts = this.system.fileSystem.read(path).split(\"\\n\");\n            let lines = this.lines;\n            if (parts[parts.length - 1] === \"\") {\n                lines++;\n            }\n            return parts.slice(lines * -1).join(\"\\n\");\n        }\n        catch (e) {\n            return \"tail: \" + e;\n        }\n    }\n}\nexports.default = tail;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(10);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/tail.js.map",
    "perm": "root:root:0755"
  },
  "/bin/touch": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 261:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass touch extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.silent = false;\n    }\n    handleFlag(flag) {\n        switch (flag.toLowerCase()) {\n            case \"s\":\n                this.silent = true;\n                break;\n        }\n        return false;\n    }\n    start(args) {\n        args.forEach(a => {\n            try {\n                this.system.fileSystem.touch(a);\n            }\n            catch (e) {\n                if (!this.silent)\n                    this.output(e);\n            }\n        });\n        this.endOutput(\"\");\n    }\n}\nexports.default = touch;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(261);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/touch.js.map",
    "perm": "root:root:0755"
  },
  "/bin/watch": {
    "content": "#!\n/******/ (() => { // webpackBootstrap\n/******/ \t\"use strict\";\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 334:\n/***/ ((__unused_webpack_module, exports) => {\n\n\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nclass BaseApp {\n    constructor(proc) {\n        this.helpOutput = false;\n        this.outHooks = [];\n        this.state = AppState.new;\n        this.rawArgs = [];\n        this.proc = proc;\n        this.system = proc.system;\n        let res = (_i) => { };\n        let rej = (_i) => { };\n        const prom = new Promise((_res, _rej) => {\n            res = _res;\n            rej = _rej;\n        });\n        this.endPromise = {\n            promise: prom,\n            res,\n            rej\n        };\n    }\n    fail(reason) {\n        this.state = AppState.crashed;\n        this.endPromise.rej(reason + \"\\n\");\n    }\n    kill() {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.killed;\n        this.endPromise.rej(\"\");\n    }\n    hookOut(hook, ident = null) {\n        this.outHooks.push([hook, ident]);\n    }\n    output(out) {\n        if (this.state != AppState.running)\n            return;\n        this.outHooks.forEach(hook => hook[0].input(out, hook[1]));\n    }\n    input(input, ident) {\n        if (this.state != AppState.running)\n            return;\n        if (input == \"\\u0018\")\n            this.end(\"\");\n        else\n            this.passInput(input, ident);\n    }\n    passInput(_input, _ident) {\n    }\n    ;\n    run(args) {\n        if (this.state != AppState.new)\n            return Promise.reject(this.state);\n        this.state = AppState.running;\n        this.rawArgs = [...args];\n        args = this.processArgFlags(args);\n        window.setTimeout(() => this.start(args), 1);\n        return this.endPromise.promise;\n    }\n    endOutput(output) {\n        this.output(output);\n        this.end(output);\n    }\n    end(output) {\n        if (this.state != AppState.running)\n            return;\n        this.state = AppState.ended;\n        this.endPromise.res(output);\n    }\n    processArgFlags(args) {\n        const remaining = [];\n        let used = false;\n        args.forEach((arg, index) => {\n            if (!arg.startsWith(\"-\") || arg.length == 1) {\n                if (!used)\n                    remaining.push(arg);\n                used = false;\n                return;\n            }\n            arg = arg.substr(1);\n            if (arg.startsWith(\"-\")) {\n                used = this.handleFlagIntern(arg.substr(1), args[index + 1] || \"\");\n            }\n            else {\n                arg.split(\"\").forEach(a => {\n                    if (this.handleFlagIntern(a, args[index + 1] || \"\")) {\n                        used = true;\n                    }\n                });\n            }\n        });\n        return remaining;\n    }\n    handleFlagIntern(flag, arg) {\n        switch (flag.toLowerCase()) {\n            case \"help\":\n                this.helpOutput = true;\n                break;\n            default:\n                return this.handleFlag(flag, arg);\n        }\n        return false;\n    }\n    handleFlag(_flag, _arg) {\n        return false;\n    }\n}\nexports.default = BaseApp;\nvar AppState;\n(function (AppState) {\n    AppState[\"new\"] = \"new\";\n    AppState[\"running\"] = \"running\";\n    AppState[\"killed\"] = \"killed\";\n    AppState[\"ended\"] = \"ended\";\n    AppState[\"crashed\"] = \"crashed\";\n})(AppState || (AppState = {}));\n\n\n/***/ }),\n\n/***/ 410:\n/***/ (function(__unused_webpack_module, exports, __webpack_require__) {\n\n\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst base_1 = __importDefault(__webpack_require__(334));\nclass watch extends base_1.default {\n    constructor() {\n        super(...arguments);\n        this.timer = null;\n        this.time = 2;\n    }\n    start(args) {\n        this.timer = window.setInterval(() => {\n            this.watch(args);\n        }, this.time * 1000);\n        this.watch(args);\n    }\n    watch(args) {\n        this.output(\"\\u001B[J\");\n        this.output(args);\n        console.log(args);\n    }\n    end(output = \"\") {\n        if (this.timer == null)\n            return;\n        window.clearInterval(this.timer);\n        super.end(output);\n    }\n}\nexports.default = watch;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tvar cachedModule = __webpack_module_cache__[moduleId];\n/******/ \t\tif (cachedModule !== undefined) {\n/******/ \t\t\treturn cachedModule.exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \t// This entry module is referenced by other modules so it can't be inlined\n/******/ \treturn __webpack_require__(410);\n/******/ \t\n/******/ })()\n;\n//# sourceMappingURL=/root/bin/watch.js.map",
    "perm": "root:root:0755"
  },
  "/etc/shell/profile": {
    "content": "#!/bin/shell\n\nsetenv PS1 \"\\033[0m\\033[32m\\$USER@\\033[32m\\$HOSTNAME\\033[0m:\\033[34m\\${pwd -a}\\033[0m\\$\\$ \";\n\nsetenv HOSTNAME \"wlf.io\";\n\n\n",
    "perm": "root:root:0644"
  }
}